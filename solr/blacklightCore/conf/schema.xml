<?xml version="1.0" encoding="UTF-8" ?>
<schema name="Cornell Blacklight Index" version="201408">
  <types>

    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

    <fieldType name="random" class="solr.RandomSortField" indexed="true" />

    <!-- Primary text fields, concatenate words and generate word parts variants -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.FlattenGraphFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stemdict.txt" />
        <filter class="solr.KStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stemdict.txt" />
        <filter class="solr.KStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Unstemmed text fields, concatenate words and generate word parts variants -->
    <!-- WordDelimiterGraphFilter -->
    <fieldType name="textNoStem" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <!-- <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="0"/> -->
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.FlattenGraphFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory" />
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <!-- <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="0"/> -->
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
      </analyzer>
    </fieldType>

    <!-- Left-anchored ngram text fields, concatenate words and generate word parts variants -->
    <!-- WordDelimiterGraphFilter -->
    <fieldType name="textLeftAnchored" class="solr.TextField" omitNorms="true">
      <analyzer type="index">
        <!-- prefix value to ensure left-anchored phrase searching -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^" replacement="bgn " />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms2.txt" ignoreCase="true" expand="false"/>
        <!-- <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="0"/> -->
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.FlattenGraphFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stemdict.txt" />
        <filter class="solr.KStemFilterFactory"/>
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="30"/>
      </analyzer>
      <analyzer type="query">
        <!-- prefix value to ensure left-anchored phrase searching -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^" replacement="bgn " />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms2.txt" ignoreCase="true" expand="false"/>
        <!-- <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="0"/> -->
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stemdict.txt" />
        <filter class="solr.KStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Left-anchored boost text fields, concatenate words and generate word parts variants -->
    <!-- WordDelimiterGraphFilter -->
    <fieldType name="textLeftAnchoredBoost" class="solr.TextField" omitNorms="true">
      <analyzer type="index">
        <!-- replace any leading whitespace with "beginswith " to ensure left-anchored phrase searching -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^" replacement="beginswith " />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <!-- <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/> -->
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.FlattenGraphFilterFactory"/>
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stemdict.txt" />
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt" />
        <filter class="solr.KStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Unstemmed left-anchored boost text fields, concatenate words and generate word parts variants -->
    <!-- WordDelimiterGraphFilter -->
    <fieldType name="textLeftAnchoredUnstemBoost" class="solr.TextField" omitNorms="true">
      <analyzer type="index">
        <!-- replace any leading whitespace with "beginswith " to ensure left-anchored phrase searching -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^" replacement="beginswith " />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/>
        <filter class="solr.ICUFoldingFilterFactory"/>
        <!-- <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/> -->
        <filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="1" splitOnCaseChange="1"/>
        <filter class="solr.FlattenGraphFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Left-anchored CJK text field -->
    <fieldType name="textLeftAnchoredCJK" class="solr.TextField" omitNorms="true">
      <analyzer type="index">
		<!--  remove all spaces  -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[\s\u3000]+" replacement=""/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.CJKWidthFilterFactory"/>
        <filter class="edu.stanford.lucene.analysis.CJKFoldingFilterFactory"/>
        <filter class="solr.ICUTransformFilterFactory" id="Traditional-Simplified"/>
        <filter class="solr.ICUTransformFilterFactory" id="Katakana-Hiragana"/>
        <filter class="solr.ICUFoldingFilterFactory"/> <!-- NFKC, case folding, diacritics removed -->
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="30"/>
      </analyzer>
      <analyzer type="query">
		<!--  remove all spaces  -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[\s\u3000]+" replacement=""/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.CJKWidthFilterFactory"/>
        <filter class="edu.stanford.lucene.analysis.CJKFoldingFilterFactory"/>
        <filter class="solr.ICUTransformFilterFactory" id="Traditional-Simplified"/>
        <filter class="solr.ICUTransformFilterFactory" id="Katakana-Hiragana"/>
        <filter class="solr.ICUFoldingFilterFactory"/> <!-- NFKC, case folding, diacritics removed -->
      </analyzer>
    </fieldType>

    <!-- Left-anchored numeric/identifier text field -->
    <fieldType name="numericLeftAnchored" class="solr.TextField" >
    <analyzer type="index">
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="-" replacement=""/>
	<tokenizer class="solr.PatternTokenizerFactory" pattern="[^a-zA-Z\d\.]+"/>
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="20"/>
    </analyzer>
    <analyzer type="query">
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="-" replacement=""/>
	<tokenizer class="solr.PatternTokenizerFactory" pattern="[^a-zA-Z\d\.]+"/>
    </analyzer>
    </fieldType>
    
    
    <!--  CJK field type for Chinese, Japanese & Korean text is care of Naomi Dushay and her work at Stanford -->
    <fieldtype name="textCJK" class="solr.TextField" positionIncrementGap="10000" autoGeneratePhraseQueries="false">
     <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\+\+" replacement="plusplus"/>
        <!-- remove spaces among hangul and han chars if there is at least one hangul char -->
        <!-- a korean char guaranteed at the start of the pattern: pattern="(\p{Hangul}\p{Han}*)\s+(?=[\p{Hangul}\p{Han}])" -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([\p{InHangul_Jamo}\p{InHangul_Compatibility_Jamo}\p{InHangul_Syllables}][\p{InBopomofo}\p{InBopomofo_Extended}\p{InCJK_Compatibility}\p{InCJK_Compatibility_Forms}\p{InCJK_Compatibility_Ideographs}\p{InCJK_Compatibility_Ideographs_Supplement}\p{InCJK_Radicals_Supplement}\p{InCJK_Symbols_And_Punctuation}\p{InCJK_Unified_Ideographs}\p{InCJK_Unified_Ideographs_Extension_A}\p{InCJK_Unified_Ideographs_Extension_B}\p{InKangxi_Radicals}\p{InHalfwidth_And_Fullwidth_Forms}\p{InIdeographic_Description_Characters}]*)\s+(?=[\p{InHangul_Jamo}\p{InHangul_Compatibility_Jamo}\p{InHangul_Syllables}\p{InBopomofo}\p{InBopomofo_Extended}\p{InCJK_Compatibility}\p{InCJK_Compatibility_Forms}\p{InCJK_Compatibility_Ideographs}\p{InCJK_Compatibility_Ideographs_Supplement}\p{InCJK_Radicals_Supplement}\p{InCJK_Symbols_And_Punctuation}\p{InCJK_Unified_Ideographs}\p{InCJK_Unified_Ideographs_Extension_A}\p{InCJK_Unified_Ideographs_Extension_B}\p{InKangxi_Radicals}\p{InHalfwidth_And_Fullwidth_Forms}\p{InIdeographic_Description_Characters}])" replacement="$1"/>
        <!-- a korean char guaranteed at the end of the pattern: pattern="([\p{Hangul}\p{Han}])\s+(?=[\p{Han}\s]*\p{Hangul})" -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([\p{InHangul_Jamo}\p{InHangul_Compatibility_Jamo}\p{InHangul_Syllables}\p{InBopomofo}\p{InBopomofo_Extended}\p{InCJK_Compatibility}\p{InCJK_Compatibility_Forms}\p{InCJK_Compatibility_Ideographs}\p{InCJK_Compatibility_Ideographs_Supplement}\p{InCJK_Radicals_Supplement}\p{InCJK_Symbols_And_Punctuation}\p{InCJK_Unified_Ideographs}\p{InCJK_Unified_Ideographs_Extension_A}\p{InCJK_Unified_Ideographs_Extension_B}\p{InKangxi_Radicals}\p{InHalfwidth_And_Fullwidth_Forms}\p{InIdeographic_Description_Characters}])\s+(?=[\p{InBopomofo}\p{InBopomofo_Extended}\p{InCJK_Compatibility}\p{InCJK_Compatibility_Forms}\p{InCJK_Compatibility_Ideographs}\p{InCJK_Compatibility_Ideographs_Supplement}\p{InCJK_Radicals_Supplement}\p{InCJK_Symbols_And_Punctuation}\p{InCJK_Unified_Ideographs}\p{InCJK_Unified_Ideographs_Extension_A}\p{InCJK_Unified_Ideographs_Extension_B}\p{InKangxi_Radicals}\p{InHalfwidth_And_Fullwidth_Forms}\p{InIdeographic_Description_Characters}\s]*[\p{InHangul_Jamo}\p{InHangul_Compatibility_Jamo}\p{InHangul_Syllables}])" replacement="$1"/>
        <tokenizer class="solr.ICUTokenizerFactory" />
        <filter class="solr.CJKWidthFilterFactory"/>
        <filter class="edu.stanford.lucene.analysis.CJKFoldingFilterFactory"/> <!-- This filter includes modifications from Princeton -->
        <filter class="solr.ICUTransformFilterFactory" id="Traditional-Simplified"/>
        <filter class="solr.ICUTransformFilterFactory" id="Katakana-Hiragana"/>
        <filter class="solr.ICUFoldingFilterFactory"/> <!-- NFKC, case folding, diacritics removed -->
        <filter class="solr.CJKBigramFilterFactory" han="true" hiragana="true" katakana="true" hangul="true" outputUnigrams="true" />
      </analyzer>
    </fieldtype>

    <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- attempt to do exact matches taking into account Unicode -->
      <fieldType name="exact" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>        
        <filter class="solr.TrimFilterFactory" />
      </analyzer>
    </fieldType>

	<!-- While the primary target of this analysis is LC Call Numbers, 
	other call numbers such as "1-1-1" and "Thesis 3" should be supported. -->
    <fieldType name="callNumberNormalized" class="solr.TextField" omitNorms="true">
      <analyzer>
        <!-- replace any periods with spaces if they don't precede number -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="\.(?!\d)" replacement=" " />
        <!-- if a number follows directly after a letter, insert a space between them -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([a-zA-Z])(\d)" replacement="$1 $2" />
        <!-- if a letter follows directly after a number, insert a space between them -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="(\d)([a-zA-Z])" replacement="$1 $2" />
        <!-- replace any leading whitespace with "lccncode." to ensure left-anchored phrase searching -->
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="^[^a-zA-Z\d\+]*([a-zA-Z\d\+])" replacement="lccncode.$1" />
        <!-- treat any sequences of characters that are not alphanumeric, plus signs, and periods as breaks between tokens -->
        <tokenizer class="solr.PatternTokenizerFactory" pattern="[^a-zA-Z\d\.\+]+"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

    <fieldType name="callNumberSort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="edu.cornell.library.integration.solr.CallNumberSortFilterFactory" prefixes="callnumberprefixes.txt"/>
      </analyzer>
    </fieldType>

    <fieldType name="filing" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="edu.cornell.library.integration.utilities.FilingFilterFactory" />
      </analyzer>
    </fieldType>

  </types>

  
  <fields>   
    <!-- NOTE: this is not a full list of fields in the index; dynamic fields are also used -->
    <field name="id" type="string" indexed="true" stored="true" required="true" />
    <field name="instance_id" type="string" indexed="true" stored="true" required="true" />
    <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
    <field name="_version_" type="long" indexed="true" stored="true" multiValued="false"/>

    <!-- fields used for back-end linking of license data for databases -->
    <field name="dbcode" type="string" indexed="false" stored="true" multiValued="true"/>
    <field name="providercode" type="string" indexed="false" stored="true" multiValued="true"/>

    <!-- these display fields are NOT multi-valued -->
    <field name="marc_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="title_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="title_vern_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="fulltitle_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="fulltitle_vern_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="subtitle_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="subtitle_vern_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="author_display" type="string" indexed="false" stored="true" multiValued="false"/>
    <field name="author_vern_display" type="string" indexed="false" stored="true" multiValued="false"/>

    <field name="isbn_t" type="text" indexed="true" stored="true" multiValued="true"/>

    <field name="language_facet"        type="string" docValues="true" stored="false" multiValued="true" />
    <field name="subject_topic_facet"   type="string" docValues="true" stored="false" multiValued="true" />
    <field name="subject_era_facet"     type="string" docValues="true" stored="false" multiValued="true" />
    <field name="subject_geo_facet"     type="string" docValues="true" stored="false" multiValued="true" />
    <field name="subject_content_facet" type="string" docValues="true" stored="false" multiValued="true" />
    <field name="author_facet"          type="string" docValues="true" stored="false" multiValued="true" />
    <field name="location"              type="string" docValues="true" stored="false" multiValued="true"/>

    <field name="pub_date"              type="string" indexed="false"  stored="true"  multiValued="true"/>
    <field name="pub_date_facet"        type="int"    docValues="true" stored="false" multiValued="false"/>
    <field name="pub_date_sort"         type="int"    indexed="true"   stored="false" multiValued="false"/>

    <field name="acquired"              type="int"    docValues="true" stored="false" multiValued="false"/>
    <field name="acquired_month"        type="string" docValues="true" stored="false" multiValued="false"/>
    <field name="new_shelf"             type="string" docValues="true" stored="true"  multiValued="true" />
  
    <!-- call number uses custom type -->
    <field name="lc_callnum_full"   type="callNumberNormalized" indexed="true" stored="false" multiValued="true" />
    <field name="lc_callnum_suffix" type="callNumberNormalized" indexed="true" stored="false" multiValued="true" />
    <field name="callnum_sort"      type="callNumberSort"       indexed="true" stored="true"  multiValued="false" />

    <!-- fields used for facet, display, and results filtering, only need to be stored where order is important -->
    <field name="format"                type="string" docValues="true" stored="false" multiValued="true"/>
    <field name="collection"            type="string" docValues="true" stored="false" multiValued="true"/>
    <field name="type"                  type="string" docValues="true" stored="false" multiValued="false" required="true"/>
    <field name="source"                type="string" docValues="true" stored="false" multiValued="false" required="true"/>
    <field name="online"                type="string" docValues="true" stored="false" multiValued="true"/>
    <field name="sixfivethree"          type="string" docValues="true" stored="false" multiValued="true"/>
    <!-- format_main_facet is used for type-aggregated relevance sorting, so it must be single valued-->
    <field name="format_main_facet"     type="string" docValues="true" stored="false" multiValued="false"/>

	<!--  Single-valued json fields are the exception (currently) -->
    <field name="holdings_json" type="string" indexed="false" stored="true" multiValued="false" />
    <field name="items_json" type="string" indexed="false" stored="true" multiValued="false" />
    <field name="availability_json" type="string" indexed="false" stored="true" multiValued="false" />

    <dynamicField name="*_i"  type="int"    indexed="true"  stored="true"/>
    <dynamicField name="*_s"  type="text"  indexed="true"  stored="true" multiValued="true"/>
    <dynamicField name="*_l"  type="long"   indexed="true"  stored="true"/>
    <dynamicField name="*_t"  type="text"    indexed="true"  stored="false" multiValued="true"/>
    <dynamicField name="*_left_chunked"  type="callNumberNormalized"    indexed="true"  stored="false" multiValued="true"/>
    <dynamicField name="*_leftboost_t"  type="textLeftAnchoredBoost" indexed="true" stored="false" multiValued="true"/>
    <dynamicField name="*_leftUnstemBoost"  type="textLeftAnchoredUnstemBoost" indexed="true" stored="false" multiValued="true"/>
    <dynamicField name="*_t_cjk"  type="textCJK"    indexed="true"  stored="false" multiValued="true"/>
    <dynamicField name="*_b"  type="boolean" indexed="true"  stored="true"/>
    <dynamicField name="*_f"  type="float"  indexed="true"  stored="true"/>
    <dynamicField name="*_d"  type="double" indexed="true"  stored="true"/>
    <dynamicField name="*_dt" type="date"    indexed="true"  stored="true"/>
    <dynamicField name="random*" type="random" />
    <dynamicField name="*_filing" type="string" docValues="true" stored="false" multiValued="true"/>
    <dynamicField name="*_exact" type="exact" indexed="true" stored="false" multiValued="true" />

    <dynamicField name="*_facet" type="string" docValues="true" stored="false" multiValued="true" />
    <dynamicField name="*_data" type="string" indexed="true" stored="true" multiValued="true" />
    <dynamicField name="*_cts" type="string" indexed="false" stored="true" multiValued="true" />
    <dynamicField name="*_piped" type="string" indexed="false" stored="true" multiValued="true" />
    <dynamicField name="*_json" type="string" indexed="false" stored="true" multiValued="true" />
    <dynamicField name="*_display" type="string" indexed="false" stored="true" multiValued="true" />
    <dynamicField name="*_sort" type="filing" indexed="true" stored="false" multiValued="false"/>
    <dynamicField name="*_browse" type="filing" indexed="true" stored="false"  multiValued="true"/>
    <dynamicField name="*_unstem" type="textNoStem" indexed="true" stored="false" multiValued="true" />
    <dynamicField name="*_starts" type="textLeftAnchored" indexed="true" stored="false" multiValued="true" />
    <dynamicField name="*_startsCJK" type="textLeftAnchoredCJK" indexed="true" stored="false" multiValued="true" />
    <dynamicField name="*_startsNum" type="numericLeftAnchored" indexed="true" stored="false" multiValued="true" />
    <dynamicField name="*spell" type="textSpell" indexed="true" stored="false" multiValued="true"/>
  </fields>

  <uniqueKey>id</uniqueKey>

  <!-- Copy Fields -->

  <copyField source="*_t" dest="*_unstem"/>
  <copyField source="*_t" dest="*_starts"/>
  <copyField source="*_t_cjk" dest="*_startsCJK"/>
  <copyField source="issn_t" dest="issn_startsNum"/>
  <copyField source="isbn_t" dest="isbn_startsNum"/>
  <copyField source="pub_date_t" dest="pub_date_startsNum"/>
  <copyField source="eightninenine_t" dest="eightninenine_startsNum"/>
  <copyField source="barcode_t" dest="barcode_startsNum"/>
  <copyField source="barcode_addl_t" dest="barcode_addl_startsNum"/>
  <copyField source="id_t" dest="id_startsNum"/>
  <copyField source="id" dest="id_startsNum"/>
  <copyField source="donor_s" dest="donor_starts"/>
  <copyField source="*_filing" dest="*_browse"/>

  <copyField source="title_t" dest="title_leftUnstemBoost"/>
  <copyField source="title_t" dest="title_leftboost_t"/>
  
  <!-- OpenSearch query field should match request handler search fields -->
  <copyField source="fulltitle_display" dest="opensearch_display"/>
  <copyField source="fulltitle_vern_display" dest="opensearch_display"/>
  <copyField source="addl_titles_t" dest="opensearch_display"/>
  <copyField source="title_added_entry_t" dest="opensearch_display"/>
  <copyField source="title_series_t" dest="opensearch_display"/>
  <copyField source="author_t" dest="opensearch_display"/>
  <copyField source="author_addl_t" dest="opensearch_display"/>
  <copyField source="subject_t" dest="opensearch_display"/>
  <copyField source="subject_addl_t" dest="opensearch_display"/>  

</schema>
