apply plugin: 'java'
apply plugin: 'eclipse'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    //sesame repository
    maven { url "http://repo.aduna-software.org/maven2/releases/" }
}

task wrapper(type: Wrapper) {

    description = "Setups up gradle wrapper. see\
 http://www.gradle.org/docs/current/userguide/gradle_wrapper.html"

    gradleVersion = '1.4'
}

dependencies {
   compile fileTree(dir: 'libs', include: '*.jar')

   compile fileTree(dir: 'lib', include: '*.jar', exclude: 'slf4j-simple-*.jar')   
   runtime fileTree(dir: 'lib', include: '*.jar', exclude: 'slf4j-simple-*.jar')   

   testCompile fileTree(dir: 'lib', include: '*.jar', exclude: 'slf4j-simple-*.jar')   
   testRuntime fileTree(dir: 'lib', include: '*.jar' )   

   //gets a lot of sesame jars   
   compile 'org.openrdf.sesame:sesame-runtime:2.7.11'

   compile 'javax.servlet:servlet-api:2.5'
   compile 'junit:junit:4.9'  

   compile 'org.apache.httpcomponents:httpmime:4.2.2'
             
   compile 'com.google.guava:guava:14.0'

	compile 'org.apache.solr:solr-solrj:6.0.0'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.9.9'

}

task list(dependsOn: configurations.compile) << { 
    println "classpath = ${configurations.compile.collect {File file -> file.name}}"
}

task (step01IdentifyCurrentVoyagerRecords, dependsOn:'assemble', type: JavaExec){
 group="Incremental Update Steps"
 description="Gets a list of BIB, MFHD and item records from the Voyager database"
 main='edu.cornell.library.integration.voyager.IdentifyCurrentVoyagerRecords'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '1024m'
}
task (UpdateVoyagerInventory, dependsOn:'assemble', type: JavaExec){
 group="Incremental Update Steps"
 description="Update local Voyager inventory tables, and queue records for update"
 main='edu.cornell.library.integration.voyager.UpdateVoyagerInventory'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '2048m'
}
task (IdentifyChangedHathiLinks, dependsOn:'assemble', type: JavaExec){
 description="Look at hathi updates file and queue bibs for reindex that are mentioned"
 main='edu.cornell.library.integration.indexer.IdentifyChangedHathiLinks'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '2048m'
}
   
task (step02IdentifyChangedRecords, dependsOn:'assemble', type: JavaExec){
 group="Incremental Update Steps"
 description="Gets a list of BIB, MFHD and item\
 records updates from the Voyager database for the previous day"
 main='edu.cornell.library.integration.voyager.IdentifyChangedRecords'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '2048m'
}

task (MonitorCatalogRecordChanges, dependsOn:'assemble', type: JavaExec){
 group="Incremental Update Steps"
 description="Uses the quick method to identify changed records in Voyager,\
  and updates them in Solr. Continues until the time is after 9pm."
 main='edu.cornell.library.integration.processing.MonitorCatalogRecordChanges'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '2048m'
}

task( step08ConfirmSolrIndexCompleteness, dependsOn: 'assemble', type: JavaExec) {
 group="Incremental Update Steps"
 description = "Generates a report of what records are missing\
 from the Solr Index or are in the Solr index but not in Voyager."
 maxHeapSize = '2048m'  
 main = 'edu.cornell.library.integration.processing.ConfirmSolrIndexCompleteness'
 classpath = sourceSets.main.runtimeClasspath
}

task (step09IndexHeadings, dependsOn: 'assemble', type: JavaExec){
   group="Incremental Update Steps"
   description="Indexes unauthorized headings and record counts based on Blacklight Solr index" 
   main='edu.cornell.library.integration.processing.IndexHeadings'
   maxHeapSize = '3000m'
   //args = [ 2, 20 ] // fail if launched before 2 am or after 8 pm
   classpath = sourceSets.main.runtimeClasspath
}
task (step10Headings2Solr, dependsOn: 'assemble', type: JavaExec){
   group="Incremental Update Steps"
   description="Pulls authorized and unauthorized headings with totals from Mysql database to Solr" 
   main='edu.cornell.library.integration.processing.Headings2Solr'
   maxHeapSize = '1500m'
   classpath = sourceSets.main.runtimeClasspath
}

task (PushToSolr, dependsOn:'assemble', type: JavaExec){
 description="Push documents to Solr"
 main='edu.cornell.library.integration.processing.PushSolrDocumentsToSolr'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '2048m'
}

task( RecordBatchProcessingData, dependsOn: 'assemble', type: JavaExec) {
 description = "Pull batch processing logs into update queue."
 maxHeapSize = '500m'
 main = 'edu.cornell.library.integration.processing.RecordBatchProcessingData'
 classpath = sourceSets.main.runtimeClasspath
}

task( processGenerationQueue, dependsOn: 'assemble', type: JavaExec) {
 description = "Process records from the index queue until quitting time. "
 maxHeapSize = '500m'
 main = 'edu.cornell.library.integration.processing.ProcessGenerationQueue'
 classpath = sourceSets.main.runtimeClasspath
}

task( processHeadingsQueue, dependsOn: 'assemble', type: JavaExec) {
 maxHeapSize = '500m'
 main = 'edu.cornell.library.integration.processing.ProcessHeadingsQueue'
 classpath = sourceSets.main.runtimeClasspath
}

task( QueueRecordsForSolrIndex, dependsOn: 'assemble', type: JavaExec) {
 description = "Takes input file of bib ids, and queues them for update in Solr."
 args = [ 4, 'Add more 541 fields to donor search', 'bibs.txt' ]
 maxHeapSize = '512m'  
 main = 'edu.cornell.library.integration.processing.QueueRecordsForSolrIndex'
 classpath = sourceSets.main.runtimeClasspath
}

task (ConvertMarcToXml, dependsOn:'assemble', type: JavaExec){
 group="Incremental Update Steps"
 description='Run ConvertMarcToXml'
 main='edu.cornell.library.integration.processing.ConvertMarcToXml'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '1024m'
}

task (indexHeadings, dependsOn: 'assemble', type: JavaExec){
   group="Full Build Steps"
   description="Indexes unauthorized headings and record counts based on Blacklight Solr index" 
   main='edu.cornell.library.integration.processing.IndexHeadings'
   maxHeapSize = '3000m'
   classpath = sourceSets.main.runtimeClasspath
}

task (indexAuthority, dependsOn: 'assemble', type: JavaExec){
   group="Full Build Steps"
   description="Indexes Authority Solr core from Authority MARC XML" 
   main='edu.cornell.library.integration.processing.IndexAuthorityRecords'
   maxHeapSize = '3000m'
   classpath = sourceSets.main.runtimeClasspath
}

task libJar(type: Jar){
    description = 'Create a jar of all the dependencies of this project, but no classes from this project'
    from {
        configurations.compile.collect{ it.isDirectory() ? it : zipTree(it) }
    }
    archiveName 'rdfToSolr.dependencies.jar'
    // some how we are getting two slf4j implementations, 
    // some project's pom.xml is messed up.
    exclude "**/slf4j-jdk14*"
}

jar {
    description = 'Create a jar of all the dependencies and classes of this project'
    dependsOn configurations.compile
    from { 
       configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
    }
    exclude "**/slf4j-jdk14*"
}

task copyToLib(type: Copy) {
    description = "Copy all dependencies to $buildDir/output/lib for use by IDEs like eclipse"  
    into "$buildDir/output/lib"
    from configurations.runtime
}

task (IdentifyCurrentSolrRecords, dependsOn:'assemble', type: JavaExec){
 description="Gets a list of BIB, MFHD and item records from the Solr index"
 main='edu.cornell.library.integration.processing.IdentifyCurrentSolrRecords'
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '2048m'
}

task (QuickIdentifyChangedRecords, dependsOn:'assemble', type: JavaExec){
 description="Attempts to quickly but imperfectly identify changed Voyager records."
 main='edu.cornell.library.integration.voyager.IdentifyChangedRecords'
 args = [ 'false' ]
 classpath = sourceSets.main.runtimeClasspath
 maxHeapSize = '512m'
}
